@model Hackathon_2025_ESG.Areas.Client.Models.HomePageViewModel

@{
    ViewData["Title"] = "AI ESG Analytics Dashboard";
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/css/dashboard.css" />

<div class="dashboard-container">
    <header class="dashboard-header">
        <h1>AI ESG Analytics</h1>
        <p>Intelligent ESG reporting powered by advanced AI analysis</p>
        <div class="actions-toolbar">
            <a asp-area="Client" asp-controller="UploadDocs" asp-action="Index" class="btn btn-primary">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>
                Generate Report
            </a>
            <a asp-area="Client" asp-controller="Home" asp-action="Index" onclick="showLoader()" class="btn btn-secondary">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="23 4 23 10 17 10"></polyline><polyline points="1 20 1 14 7 14"></polyline><path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path></svg>
                Refresh
            </a>
        </div>
    </header>

    <main>
        <div class="reports-section-header">
            <div>
                <h2>Recent Reports</h2>
                <p>Your ESG analysis history and insights</p>
            </div>
            <div class="reports-count">
                @Model.TotalReportCount Reports
            </div>
        </div>

        <div class="reports-grid">
            @foreach (var report in Model.RecentReports)
            {
                <div class="report-card">
                    <div class="card-header">
                        <div class="icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline></svg>
                        </div>
                        <div class="file-info">
                            <p class="file-name">@report.FileName</p>
                            @* <p class="source-name">@report.SourceName</p> *@
                        </div>
                        <div class="file-type-tag">PDF</div>
                    </div>

                    @* <div class="card-details">
                        <div class="detail-item">
                            <span class="detail-label">Size</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-value">@report.FormattedSize</span>
                        </div>
                    </div> *@

                    <div class="card-footer">
                        <span class="created-date">@report.FormattedCreationDate</span>
                        <div class="footer-actions">
                            <a href="@report.DownloadUrl" class="btn btn-download">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
                                Download
                            </a>
                            <button class="btn-icon btn-view"
                                    data-url="@report.DownloadUrl"
                                    data-filename="@report.FileName">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </main>

    <div id="preview-modal" class="modal-overlay">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modal-title">Document Preview</h2>
                <button id="modal-close-btn" class="btn-icon">&times;</button>
            </div>
            <div class="modal-body">
                <iframe id="modal-iframe" src="" frameborder="0"></iframe>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get all the necessary modal elements
            const modalOverlay = document.getElementById('preview-modal');
            const modalTitle = document.getElementById('modal-title');
            const modalIframe = document.getElementById('modal-iframe');
            const modalCloseBtn = document.getElementById('modal-close-btn');

            // Get all the "View" buttons
            const viewButtons = document.querySelectorAll('.btn-view');

            // Function to open the modal
            const openModal = (url, filename) => {
                modalTitle.textContent = filename;
                modalIframe.src = url;
                modalOverlay.style.display = 'flex';
            };

            // Function to close the modal
            const closeModal = () => {
                modalOverlay.style.display = 'none';
                modalIframe.src = ''; // Clear the iframe to stop content from loading
            };

            // Add a click event listener to each view button
            viewButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const url = button.dataset.url;
                    const filename = button.dataset.filename;
                    openModal(url, filename);
                });
            });

            // Add click event listeners to close the modal
            modalCloseBtn.addEventListener('click', closeModal);
            modalOverlay.addEventListener('click', (e) => {
                // Only close if the user clicks on the overlay itself, not the content
                if (e.target === modalOverlay) {
                    closeModal();
                }
            });
        });
    </script>
}